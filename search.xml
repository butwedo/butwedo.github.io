<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[一个有点意思的证明]]></title>
      <url>/2017/09/15/%E4%B8%80%E4%B8%AA%E6%8C%BA%E6%9C%89%E6%84%8F%E6%80%9D%E7%9A%84%E8%AF%81%E6%98%8E/</url>
      <content type="html"><![CDATA[<p>昨天二师兄突然来这边机房，然后又突然就没头没脑的提出了这个问题：</p>
<blockquote>
<p>将一个完全图的所有边任意指定方向（所谓竞赛图），如何证明这张图一定存在一条哈密顿路径？</p>
</blockquote>
<p>经过一番思考和操作，我们大致把它给搞出来了，现记录如下。</p>
<p>首先证明，一个竞赛图最多存在一个入度为0的点：<br>若存在两个以上的点入度为零，那么它们之间的边无法指明方向，证毕。</p>
<p>然后我们要明确一点，即一个完全图删掉一个点及其所有连边之后还是一个完全图。那么我们一直删掉那个入度为零的点进行拓扑排序，递归证明可得每次删掉一个点之后最多还是只会有一个点入度为零，且这个点一定是上一个被删点的儿子节点（姑且这么叫）。一直删点直到没有点为止，我们一定能够求出一条哈密顿路。</p>
<p>那么如果途中不存在入度为零的点怎么办呢？</p>
<p>我们可以随意指定一个点，并且把指向它的边都删掉，这样就有了一个入度为零的点了（手动滑稽）。由于我们删掉的都是它的入边，因此不会把其他的点变为入度为零的点。<br>然后继续递归求解。证毕。</p>
]]></content>
      
        <categories>
            
            <category> 线下OI </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 图论 </tag>
            
            <tag> 证明 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[又是一道坑题HDU4405]]></title>
      <url>/2017/09/15/HDU4405/</url>
      <content type="html"><![CDATA[<p>最近打算刷几道概率DP，然而就这么状况频出。。。</p>
<p>丢个链接：</p>
<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=4405" target="_blank" rel="external">HDU4405</a></p>
<p>这道题的大意是说Hzz玩儿飞行棋，起点是0，终点是n，并且路径上还有m条航线(x,y)可以不用掷骰子直接从x到y。问掷骰子次数的期望。</p>
<p>明明是一道裸题，结果又WA了好几遍。看讨论才发现若x点存在航线的话直接飞，不考虑掷骰子的事儿。然而原文中说的是</p>
<blockquote>
<p>The i-th flight line can help Hzz fly from grid Xi to Yi (0&lt;Xi&lt;Yi&lt;=N) without throwing the dice.</p>
</blockquote>
<p>我也不知道这个“help”咋就成强制的了，因为可能会存在这种情况：</p>
<pre><code>12 7
1 8
2 12
3 12
4 12
5 12
6 12
7 12
0 0
</code></pre><p>这样的数据，当第一次掷出1时很明显不选走航线是更优的。。。不是很明白飞行棋的规矩，但是按照题目里的说明应该是可以选择飞不飞吧。。。然而这么打就错了，强制飞就对了。。。辣鸡HDU。。。</p>
<pre><code class="cpp">#include&lt;iostream&gt;
#include&lt;cstdio&gt;
#include&lt;cstring&gt;
using namespace std;
int n,m;
double f[100005];
int to[100005];
int main()
{
    while(scanf(&quot;%d%d&quot;,&amp;n,&amp;m)!=EOF&amp;&amp;n)
    {
        memset(f,0,sizeof(f));
        memset(to,0,sizeof(to));
        for(int i=1;i&lt;=m;i++)
        {
            int a,b;
            scanf(&quot;%d%d&quot;,&amp;a,&amp;b);
            to[a]=b;
        }
        for(int i=n-1;i&gt;=0;i--)
        {
            for(int j=1;j&lt;=6;j++)
            {
                f[i]+=f[i+j];
                if(i+j==n)break; 
            }
            f[i]=f[i]/6.0+1;
            if(to[i])f[i]=min(f[i],f[to[i]]);
        }
        printf(&quot;%.4lf\n&quot;,f[0]);
    }
    return 0;
}
</code></pre>
]]></content>
      
        <categories>
            
            <category> OJ题目 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> DP </tag>
            
            <tag> 期望DP </tag>
            
            <tag> HDU </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HDU3853 LOOPS]]></title>
      <url>/2017/09/14/LOOPS/</url>
      <content type="html"><![CDATA[<p>先丢个<a href="http://acm.hdu.edu.cn/showproblem.php?pid=3853" target="_blank" rel="external">题目链接</a>。<br>题目大意是此主人公（马猴烧酒，话说前几天才和yzyun大佬谈论过这个梗= =）处在一个r*c的矩阵的左上角，她需要去到右下角，在每个点上，她有grid(r,c)的概率留在原地，有grid(r,c+1)的概率向右走，有grid(r+1,c)的1概率向下走，每次走动都需要花费2点能量值。求到终点的期望能量值花费。</p>
<p>一道很裸的期望DP，倒推期望，设f[i][j]为从点(i,j)到终点的期望，可推得，当s[i][j]不为1时，<code>f[i][j]=(f[i+1][j]*d[i][j]+f[i][j+1]*rm[i][j]+2)/(1-s[i][j])</code>，否则f[i][j]直接为0。一些变量的意义请直接见代码。</p>
<pre><code class="cpp">#include&lt;iostream&gt;
#include&lt;cstdio&gt;
#include&lt;cstring&gt;
using namespace std;
double d[1003][1003],rm[1003][1003];//d代表向下的概率，rm代表向右的概率
double s[1003][1003],f[1003][1003];//s代表留在原地的概率，f代表期望花费
int main()
{
    int r,c;
    while(scanf(&quot;%d%d&quot;,&amp;r,&amp;c)!=EOF)
    {
        memset(f,0,sizeof(f));
        for(int i=1;i&lt;=r;i++)
        {
            for(int j=1;j&lt;=c;j++)
            {
                scanf(&quot;%lf%lf%lf&quot;,&amp;s[i][j],&amp;rm[i][j],&amp;d[i][j]);
            }
        }
        for(int i=r;i&gt;=1;i--)
        {
            for(int j=c;j&gt;=1;j--)
            {
                if(i==r&amp;&amp;j==c)continue;
                if(s[i][j]==1)continue;
                f[i][j]=(f[i+1][j]*d[i][j]+f[i][j+1]*rm[i][j]+2)/(1-s[i][j]);
            }
        }
        printf(&quot;%.3lf\n&quot;,f[1][1]);
    }
    return 0;
}
</code></pre>
<p>按理说这道题挺简单的，然而却有几个不大不小的槽点。这道题我第一遍交的时候按照每个点一组数据，数组开的float，结果WA了，第二遍开的double，按每个点多数据打的，然后就A了。。。不知道是精度问题还是hdu又一次不带提醒的用的多数据。。。。还有一个槽点的是答案保证不超过1000000，然而若中间的某点只能在原地走的话，期望就是INF，而我们把这样的点的期望赋值成了0，就相当于把这个点当成了又一个终点，可能会导致答案错误，不清楚数据是不是特意避开了这样的情况，还是标程就是错的没有考虑这种情况，反正我A了~如果有哪位dalao知道赋值为INF的正确做法的话，欢迎指出发到我邮箱里sounkix@outlook.com，非常感谢！</p>
]]></content>
      
        <categories>
            
            <category> OJ题目 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> DP </tag>
            
            <tag> 期望DP </tag>
            
            <tag> HDU </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello, world.]]></title>
      <url>/2017/09/13/Hello/</url>
      <content type="html"><![CDATA[<p>所以，从前天就一直开始搞的这个博客，到今天终于是差不多整好了。真是长舒了一口气。虽然之间发生了很多鬼事，不过谢天谢地到最后所有事都在掌控之中。</p>
<h3 id="非常感谢的一些人："><a href="#非常感谢的一些人：" class="headerlink" title="非常感谢的一些人："></a>非常感谢的一些人：</h3><ul>
<li><a href="http://yzyun.pw" target="_blank" rel="external">yzyun</a> dalao,是比我先整blog的人，也是因为他的影响我才开始有了开博客的念头，在搭建博客的过程中包括关于Hexo模板的种种问题以及域名的购置及解析都帮了我非常非常大的忙。</li>
<li><a href="http://ytoworld.tk" target="_blank" rel="external">yto</a>  貌似是最先有博客的dalao，对一些系统和github的知识非常熟悉并且帮助人时非常亲切<del>大概是因为他是双性恋的原因吧</del></li>
<li>同机房的czd帮我用支付宝付了域名的费用，非常感谢并再一次使我认识到了财政独立的重要性。</li>
<li>HYS dalao，不折不扣的真正巨神，在出题的百忙之余帮没带手机的我用自己的手机完成了一些账号的短信验证。非常感谢他的帮忙并日常膜拜</li>
<li><a href="http://go.kieran.top" target="_blank" rel="external">kieran</a> 并不认识这位大佬，但博客第一个主题是用的这位大牛的<a href="https://github.com/SuperKieran/TKL" target="_blank" rel="external">TKL</a>,并且背景的两只小猫也是TKL原来的背景。虽然因为dalao的使用文档是全英的，蒟蒻根本看不懂，但是页面非常漂亮！如果有哪位也有意想要搭个类似的博客的话，可以考虑一下这位大佬的主题！</li>
<li><a href="https://material.viosey.com/" target="_blank" rel="external">Viosey</a> 这位大佬设计了我现在使用的主题，各方面都非常棒！并且提供了详细的中文说明文档，非常照顾我这种小白！强烈安利！<br>还有这个博客的一些图片，以及搭建过程中一些小问题的解决，都是各位网友前辈留下来的，在这里也要说声谢谢。</li>
</ul>
<hr>
<p>然后，按照惯例:</p>
<p><em>Hello, world.</em></p>
<pre><code class="cpp">#include&lt;iostream&gt;
using namespace std;
int main()
{
    cout&lt;&lt;&quot;Hello, world.&quot;;
    return 0;
}
</code></pre>
<blockquote>
<p><em>They say no one cares, no one sees, no one can get though</em></p>
<p><em>However, as I know I’m not the only one,I say:</em></p>
<p><em>“Well,but we do.</em></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 新世界 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 新世界 </tag>
            
        </tags>
        
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[gallery]]></title>
      <url>/gallery/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[tags]]></title>
      <url>/tags/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[friends and links]]></title>
      <url>/links/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[timeline]]></title>
      <url>/timeline/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title></title>
      <url>/pac/index.html</url>
      <content type="html"><![CDATA[<html>
<head>
<meta charset="utf8">
<title>Pac-Man . 吃豆游戏</title>
<link rel="shortcut icon" href="favicon.png">
<style>
	body{background-color: #292929}
	*{padding:0;margin:0;}
	.wrapper{
		width: 960px;
		margin:0 auto;
		line-height:36px;
		text-align:center;
		color:#999;
	}
	canvas{display:block;background: #000;}
	.mod-botton{
		height: 32px;
		padding: 15px 0;
		text-align: center;
	}
</style>
</head>
<body>

<div class="wrapper">
	<canvas id="canvas" width="960" height="640">不支持画布</canvas>
	<p>按［空格］暂停或继续</p>		
</div>
<script src="game.js"></script>
<script src="index.js"></script>
<div style="text-align:center;">
</div>
</body>
</html>
]]></content>
    </entry>
    
    <entry>
      <title></title>
      <url>/pac/game.js</url>
      <content type="html"><![CDATA['use strict';
/*
* 小型游戏引擎
*/

// requestAnimationFrame polyfill
if (!Date.now)
Date.now = function() { return new Date().getTime(); };
(function() {
    'use strict';
    var vendors = ['webkit', 'moz'];
    for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {
        var vp = vendors[i];
        window.requestAnimationFrame = window[vp+'RequestAnimationFrame'];
        window.cancelAnimationFrame = (window[vp+'CancelAnimationFrame'] || window[vp+'CancelRequestAnimationFrame']);
    }
    if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) // iOS6 is buggy
    || !window.requestAnimationFrame || !window.cancelAnimationFrame) {
        var lastTime = 0;
        window.requestAnimationFrame = function(callback) {
            var now = Date.now();
            var nextTime = Math.max(lastTime + 16, now);
            return setTimeout(function() { callback(lastTime = nextTime); },
            nextTime - now);
        };
        window.cancelAnimationFrame = clearTimeout;
    }
}());

function Game(id,params){
    var _ = this;
    var settings = {
        width:960,						//画布宽度
        height:640						//画布高度
    };
    var _extend = function(target,settings,params){
        params = params||{};
        for(var i in settings){
            target[i] = params[i]||settings[i];
        }
        return target;
    };
    _extend(_,settings,params);
    var $canvas = document.getElementById(id);
    $canvas.width = _.width;
    $canvas.height = _.height;
    var _context = $canvas.getContext('2d');	//画布上下文环境
    var _stages = [];							//布景对象队列
    var _events = {};							//事件集合
    var _index=0,								//当前布景索引
        _hander;  								//帧动画控制
    //活动对象构造
    var Item = function(params){
        this._params = params||{};
        this._id = 0;               //标志符
        this._stage = null;         //与所属布景绑定
        this._settings = {
            x:0,					//位置坐标:横坐标
            y:0,					//位置坐标:纵坐标
            width:20,				//宽
            height:20,				//高
            type:0,					//对象类型,0表示普通对象(不与地图绑定),1表示玩家控制对象,2表示程序控制对象
            color:'#F00',			//标识颜色
            status:1,				//对象状态,0表示未激活/结束,1表示正常,2表示暂停,3表示临时,4表示异常
            orientation:0,			//当前定位方向,0表示右,1表示下,2表示左,3表示上
            speed:0,				//移动速度
            //地图相关
            location:null,			//定位地图,Map对象
            coord:null,				//如果对象与地图绑定,需设置地图坐标;若不绑定,则设置位置坐标
            path:[],				//NPC自动行走的路径
            vector:null,			//目标坐标
            //布局相关
            frames:1,				//速度等级,内部计算器times多少帧变化一次
            times:0,				//刷新画布计数(用于循环动画状态判断)
            timeout:0,				//倒计时(用于过程动画状态判断)
            control:{},				//控制缓存,到达定位点时处理
            update:function(){}, 	//更新参数信息
            draw:function(){}		//绘制
        };
        _extend(this,this._settings,this._params);
    };
    Item.prototype.bind = function(eventType,callback){
        if(!_events[eventType]){
            _events[eventType] = {};
            $canvas.addEventListener(eventType,function(e){
                var position = _.getPosition(e);
                _stages[_index].items.forEach(function(item){
                    if(Math.abs(position.x-item.x)]]></content>
    </entry>
    
    <entry>
      <title></title>
      <url>/pac/index.js</url>
      <content type="html"><![CDATA[//主程序,业务逻辑
(function(){
	var _DATA = [		//地图数据
		[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
		[1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1],
		[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
		[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
		[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
		[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
		[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
		[1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
		[1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1],
		[1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1],
		[1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1],
		[1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1],
		[1,1,1,1,1,1,0,1,1,0,1,1,1,2,2,1,1,1,0,1,1,0,1,1,1,1,1,1],
		[1,1,1,1,1,1,0,1,1,0,1,2,2,2,2,2,2,1,0,1,1,0,1,1,1,1,1,1],
		[0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0,0,0,0,0,0,0],
		[1,1,1,1,1,1,0,1,1,0,1,2,2,2,2,2,2,1,0,1,1,0,1,1,1,1,1,1],
		[1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1],
		[1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1],
		[1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1],
		[1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1],
		[1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1],
		[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
		[1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
		[1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1],
		[1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
		[1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
		[1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1],
		[1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1],
		[1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1],
		[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
		[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
	],
	_GOODS = {			//能量豆
		'1,3':1,
		'26,3':1,
		'1,23':1,
		'26,23':1
	},
	_COS = [1,0,-1,0],
	_SIN = [0,1,0,-1],
	_COLOR = ['#F00','#F93','#0CF','#F9C'],//红,橙,
	_LIFE = 3,
	_SCORE = 0;		//得分

	var game = new Game('canvas');
	//启动页
	(function(){
		var stage = game.createStage();
		//logo
		stage.createItem({
			x:game.width/2,
			y:game.height*.45,
			width:100,
			height:100,
			frames:3,
			draw:function(context){
				var t = Math.abs(5-this.times%10);
				context.fillStyle = '#FFE600';
				context.beginPath();
				context.arc(this.x,this.y,this.width/2,t*.04*Math.PI,(2-t*.04)*Math.PI,false);
				context.lineTo(this.x,this.y);
				context.closePath();
				context.fill();
				context.fillStyle = '#000';
				context.beginPath();
				context.arc(this.x+5,this.y-27,7,0,2*Math.PI,false);
				context.closePath();
				context.fill();
			}
		});
		//游戏名
		stage.createItem({
			x:game.width/2,
			y:game.height*.6,
			draw:function(context){
				context.font = 'bold 42px Helvetica';
				context.textAlign = 'center';
				context.textBaseline = 'middle';
				context.fillStyle = '#FFF';
				context.fillText('Pac-Man',this.x,this.y);
			}
		});
		//版权信息
		stage.createItem({
			x:game.width-12,
			y:game.height-5,
			draw:function(context){
				context.font = '14px Helvetica';
				context.textAlign = 'right';
				context.textBaseline = 'bottom';
				context.fillStyle = '#AAA';
				context.fillText('© passer-by.com',this.x,this.y);
			}
		});
		//事件绑定
		stage.bind('keydown',function(e){
			switch(e.keyCode){
				case 13:
				case 32:
				game.nextStage();
				break;
			}
		});
	})();
	//游戏主程序
	(function(){
		var stage,map,beans,player,times;
		stage = game.createStage({
			update:function(){
				var stage = this;
				if(stage.status==1){								//场景正常运行
					items.forEach(function(item){
						if(map&&!map.get(item.coord.x,item.coord.y)&&!map.get(player.coord.x,player.coord.y)){
							var dx = item.x-player.x;
							var dy = item.y-player.y;
							if(dx*dx+dy*dy<750&&item.status!=4){ 物体检测="" if(item.status="=3){" item.status="4;" _score="" +="10;" }else{="" stage.status="3;" stage.timeout="30;" }="" });="" if(json.stringify(beans.data).indexof(0)<0){="" 当没有物品的时候，进入结束画面="" game.nextstage();="" }else="" if(stage.status="=3){" 场景临时状态="" if(!stage.timeout){="" _life--;="" if(_life){="" stage.resetitems();="" return="" false;="" 绘制地图="" map="stage.createMap({" x:60,="" y:10,="" data:_data,="" cache:true,="" draw:function(context){="" context.linewidth="2;" for(var="" j="0;" j<this.y_length;="" j++){="" i="0;" i<this.x_length;="" i++){="" var="" value="this.get(i,j);" if(value){="" code="[0,0,0,0];" if(this.get(i+1,j)&&!(this.get(i+1,j-1)&&this.get(i+1,j+1)&&this.get(i,j-1)&&this.get(i,j+1))){="" code[0]="1;" if(this.get(i,j+1)&&!(this.get(i-1,j+1)&&this.get(i+1,j+1)&&this.get(i-1,j)&&this.get(i+1,j))){="" code[1]="1;" if(this.get(i-1,j)&&!(this.get(i-1,j-1)&&this.get(i-1,j+1)&&this.get(i,j-1)&&this.get(i,j+1))){="" code[2]="1;" if(this.get(i,j-1)&&!(this.get(i-1,j-1)&&this.get(i+1,j-1)&&this.get(i-1,j)&&this.get(i+1,j))){="" code[3]="1;" if(code.indexof(1)="">-1){
								context.strokeStyle=value==2?"#FFF":"#09C";
								var pos = this.coord2position(i,j);
								switch(code.join('')){
									case '1100':
										context.beginPath();
										context.arc(pos.x+this.size/2,pos.y+this.size/2,this.size/2,Math.PI,1.5*Math.PI,false);
										context.stroke();
										context.closePath();
										break;
									case '0110':
										context.beginPath();
										context.arc(pos.x-this.size/2,pos.y+this.size/2,this.size/2,1.5*Math.PI,2*Math.PI,false);
										context.stroke();
										context.closePath();
										break;
									case '0011':
										context.beginPath();
										context.arc(pos.x-this.size/2,pos.y-this.size/2,this.size/2,0,.5*Math.PI,false);
										context.stroke();
										context.closePath();
										break;
									case '1001':
										context.beginPath();
										context.arc(pos.x+this.size/2,pos.y-this.size/2,this.size/2,.5*Math.PI,1*Math.PI,false);
										context.stroke();
										context.closePath();
										break;
									default:
										var dist = this.size/2;
										code.forEach(function(v,index){
											if(v){
												context.beginPath();
												context.moveTo(pos.x,pos.y);
												context.lineTo(pos.x-_COS[index]*dist,pos.y-_SIN[index]*dist);
												context.stroke();
												context.closePath();							
											}
										});
								}
							}
						}
					}
				}
			}
		});
		//物品地图
		beans = stage.createMap({
			x:60,
			y:10,
			data:_DATA,
			frames:8,
			draw:function(context){
				for(var j=0; j<this.y_length; j++){="" for(var="" i="0;" i<this.x_length;="" i++){="" if(!this.get(i,j)){="" var="" pos="this.coord2position(i,j);" context.fillstyle="#F5F5DC" ;="" if(_goods[i+','+j]){="" context.beginpath();="" context.arc(pos.x,pos.y,3+this.times%2,0,2*math.pi,true);="" context.fill();="" context.closepath();="" }else{="" context.fillrect(pos.x-2,pos.y-2,4,4);="" }="" });="" 得分="" stage.createitem({="" x:690,="" y:100,="" draw:function(context){="" context.font="bold 28px Helvetica" context.textalign="left" context.textbaseline="bottom" context.filltext('score',this.x,this.y);="" context.filltext(_score,this.x+12,this.y);="" 状态文字="" y:320,="" frames:25,="" if(stage.status="=2&&this.times%2){" context.filltext('pause',this.x,this.y);="" 生命值="" x:705,="" y:540,="" width:30,="" height:30,="" x="this.x+40*i,y=this.y;" context.arc(x,y,this.width="" 2,.15*math.pi,-.15*math.pi,false);="" context.lineto(x,y);="" npc="" orientation:3,="" color:_color[i],="" location:map,="" coord:{x:12+i,y:14},="" vector:{x:12+i,y:14},="" type:2,="" frames:10,="" speed:1,="" timeout:math.floor(math.random()*120),="" update:function(){="" new_map;="" if(this.status="=3&&!this.timeout){" this.status="1;" if(!this.coord.offset){="" 到达坐标中心时计算="" if(!this.timeout){="" 定时器="" new_map="JSON.parse(JSON.stringify(map.data).replace(/2/g,0));" id="this._id;" items.foreach(function(item){="" if(item._id!="id&&item.status==1){" npc将其它所有还处于正常状态的npc当成一堵墙="" new_map[item.coord.y][item.coord.x]="1;" this.path="map.finder({" map:new_map,="" start:this.coord,="" end:player.coord="" if(this.path.length){="" this.vector="this.path[0];" }else="" start:player.coord,="" end:this.coord,="" type:'next'="" end:this._params.coord="" 是否转变方向="" if(this.vector.change){="" this.coord.x="this.vector.x;" this.coord.y="this.vector.y;" this.x="pos.x;" this.y="pos.y;" 方向判定="" if(this.vector.x="">this.coord.x){
							this.orientation = 0;
						}else if(this.vector.x<this.coord.x){ this.orientation="2;" }else="" if(this.vector.y="">this.coord.y){
							this.orientation = 1;
						}else if(this.vector.y<this.coord.y){ this.orientation="3;" }="" this.x="" +="this.speed*_COS[this.orientation];" this.y="" },="" draw:function(context){="" var="" issick="false;" if(this.status="=3){">80||this.times%2?true:false;
					}
					if(this.status!=4){
						context.fillStyle = isSick?'#BABABA':this.color;
						context.beginPath();
						context.arc(this.x,this.y,this.width*.5,0,Math.PI,true);
						switch(this.times%2){
							case 0:
							context.lineTo(this.x-this.width*.5,this.y+this.height*.4);
							context.quadraticCurveTo(this.x-this.width*.4,this.y+this.height*.5,this.x-this.width*.2,this.y+this.height*.3);
							context.quadraticCurveTo(this.x,this.y+this.height*.5,this.x+this.width*.2,this.y+this.height*.3);
							context.quadraticCurveTo(this.x+this.width*.4,this.y+this.height*.5,this.x+this.width*.5,this.y+this.height*.4);
							break;
							case 1:
							context.lineTo(this.x-this.width*.5,this.y+this.height*.3);
							context.quadraticCurveTo(this.x-this.width*.25,this.y+this.height*.5,this.x,this.y+this.height*.3);
							context.quadraticCurveTo(this.x+this.width*.25,this.y+this.height*.5,this.x+this.width*.5,this.y+this.height*.3);
							break;
						}
						context.fill();
						context.closePath();
					}
					context.fillStyle = '#FFF';
					if(isSick){
						context.beginPath();
						context.arc(this.x-this.width*.15,this.y-this.height*.21,this.width*.08,0,2*Math.PI,false);
						context.arc(this.x+this.width*.15,this.y-this.height*.21,this.width*.08,0,2*Math.PI,false);
						context.fill();
						context.closePath();
					}else{
						context.beginPath();
						context.arc(this.x-this.width*.15,this.y-this.height*.21,this.width*.12,0,2*Math.PI,false);
						context.arc(this.x+this.width*.15,this.y-this.height*.21,this.width*.12,0,2*Math.PI,false);
						context.fill();
						context.closePath();
						context.fillStyle = '#000';
						context.beginPath();
						context.arc(this.x-this.width*(.15-.04*_COS[this.orientation]),this.y-this.height*(.21-.04*_SIN[this.orientation]),this.width*.07,0,2*Math.PI,false);
						context.arc(this.x+this.width*(.15+.04*_COS[this.orientation]),this.y-this.height*(.21-.04*_SIN[this.orientation]),this.width*.07,0,2*Math.PI,false);
						context.fill();
						context.closePath();
					}
				}
			});
		}
		items = stage.getItemsByType(2);
		//主角
		player = stage.createItem({
			width:30,
			height:30,
			type:1,
			location:map,
			coord:{x:13.5,y:23},
			orientation:2,
			speed:2,
			frames:10,
			update:function(){
				var coord = this.coord;
				if(!coord.offset){
					if(this.control.orientation!='undefined'){
						if(!map.get(coord.x+_COS[this.control.orientation],coord.y+_SIN[this.control.orientation])){
							this.orientation = this.control.orientation;
						}
					}
					this.control = {};
					var value = map.get(coord.x+_COS[this.orientation],coord.y+_SIN[this.orientation]);
					if(value==0){
						this.x += this.speed*_COS[this.orientation];
						this.y += this.speed*_SIN[this.orientation];
					}else if(value</this.coord.y){></this.coord.x){></this.y_length;></750&&item.status!=4){>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[pacman]]></title>
      <url>/pacman/index.html</url>
      <content type="html"><![CDATA[<p><a href="http://butwedo.space/pac/index.html"><img src="http://butwedo.space/img/pac_man.png" alt=""></a></p>
]]></content>
    </entry>
    
  
</search>
